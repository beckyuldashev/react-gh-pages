{"version":3,"file":"static/js/843.a9c2dc2f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/My-posts/My-posts.module.css?2d8b","components/Profile/My-posts/Post/Post.js","components/Profile/My-posts/My-posts.js","redux/selectors/profile-selectors.js","components/Profile/My-posts/My-posts-container.js","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/User-info/User-info.module.css?77bd","components/Profile/User-info/UserStatus/UserStatusWithHooks.js","components/Profile/ProfileFormData.js","components/Profile/User-info/User-info.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"My-posts_posts__EXl0C\",\"postsWrapper\":\"My-posts_postsWrapper__GrmrX\"};","import './Post.module.css';\r\nimport logo from './img/basketball.png';\r\n\r\nconst Post = ({message, likeCount}) => {\r\n  return (\r\n    <div className=\"post\">\r\n      <img src={logo} alt=\"ava\" />\r\n      <p className=\"postText\">{message}</p>\r\n      <button>Like: {likeCount || 0}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './My-posts.module.css';\r\nimport Post from './Post/Post';\r\nimport { PostForm } from '../../common/MyForms/MyForms';\r\n\r\n\r\n// class MyPosts extends React.PureComponent {\r\n//   // We don't need write lifesycle method \"shouldComponentUpdate\" if we use PureComponent \r\n//   // shouldComponentUpdate(nextProps, nextState) {\r\n//   //   return nextProps !== this.props || nextState !== this.state;\r\n//   // }\r\n\r\n//   onAddPost = (values) => {\r\n//     this.props.addNewPost(values.post);\r\n//   };\r\n\r\n//   render() {\r\n//     console.log('render')\r\n\r\n//     return (\r\n//     <div className={classes.posts}>\r\n//       <h2>My posts</h2>\r\n\r\n//       <PostForm onSubmit={this.onAddPost} />\r\n      \r\n//       <div className={classes.postsWrapper}>\r\n//         {this.props.postData.map((p, index) => <Post message={p.message} likeCount={p.likeCount} key={index} />)}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n//   }\r\n// }\r\n\r\nconst MyPosts = React.memo(({addNewPost, postData}) => {\r\n  const onAddPost = (values) => {\r\n    addNewPost(values.post);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.posts}>\r\n       <h2>My posts</h2>\r\n\r\n       <PostForm onSubmit={onAddPost} />\r\n      \r\n       <div className={classes.postsWrapper}>\r\n         {postData.map((p, index) => <Post message={p.message} likeCount={p.likeCount} key={index} />)}\r\n       </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","export const getUserInfo = state => state.profilePage.userInfo;\r\nexport const getStatusText = state => state.profilePage.statusText;\r\nexport const getUserId = state => state.profilePage.userId;\r\nexport const getPostData = state => state.profilePage.postData;\r\nexport const getIsAvatarLoading = state => state.profilePage.isAvatarLoading;\r\nexport const getErrorMessage = state => state.profilePage.errorMessage;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './My-posts';\r\nimport { compose } from 'redux';\r\nimport { getPostData } from '../../../redux/selectors/profile-selectors';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postData: getPostData(state)\r\n  };\r\n};\r\n\r\n\r\nconst MyPostsContainer = compose(\r\n  connect(mapStateToProps, {\r\n    addNewPost: addPostActionCreator\r\n  })\r\n)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"bg-block\":\"Profile_bg-block__lhEwa\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"User-info_userInfo__vVihr\",\"userData\":\"User-info_userData__PwjVr\",\"userName\":\"User-info_userName__FjaaL\",\"userDataItem\":\"User-info_userDataItem__eW5Cf\",\"userAvatar\":\"User-info_userAvatar__5l3G0\",\"errorMsg\":\"User-info_errorMsg__Qec0d\"};","import './UserStatus.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst UserStatusWithHooks = ({status, updateUserStatus}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [statusText, setStatusText] = useState(status);\r\n\r\n  useEffect(() => {\r\n    setStatusText(status)\r\n  }, [status]) \r\n\r\n  const onChangeStatus = (e) => {\r\n    setStatusText(e.target.value);\r\n  }\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode(!editMode) \r\n  }\r\n\r\n  const saveChanges = () => {\r\n    updateUserStatus(statusText);\r\n    toggleEditMode()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        editMode ? \r\n          <div>\r\n          <input onChange={onChangeStatus} value={statusText} type=\"text\" autoFocus/>\r\n          <button onClick={saveChanges}>Save</button>\r\n          </div>\r\n        :\r\n          <div>\r\n            <span onDoubleClick={toggleEditMode}>Status: {statusText}</span>\r\n          </div>\r\n      }\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default UserStatusWithHooks;","import { Field, Form } from 'react-final-form';\r\nimport { InputArea, Textarea, createField } from '../common/FormControls/FormControls';\r\nimport { composeValidators, maxLength, requiredField } from '../../utils/validators';\r\n\r\nconst ProfileFormData = ({userInfo, onSaveProfileChanges}) => {\r\n  return (\r\n    <Form \r\n      onSubmit={onSaveProfileChanges}\r\n      initialValues={userInfo}\r\n      render={({handleSubmit, submitting, pristine, initialValues}) => (\r\n        <form onSubmit={handleSubmit}>\r\n          Full name:\r\n          {createField ('fullName', composeValidators(requiredField, maxLength(50)), InputArea, {type: 'text', placeholder: 'A Full Name'})}\r\n          <div>\r\n            About me:\r\n            {createField ('aboutMe', composeValidators(requiredField, maxLength(100)), InputArea, {type: 'text', placeholder: 'About me'})}\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Looking for a job:\r\n              {createField ('lookingForAJob', null, InputArea, {type: 'checkbox'})}\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            My professional skills:\r\n            {createField ('lookingForAJobDescription', requiredField, Textarea, {type: 'text', placeholder: 'Tell about your professional skills'})}\r\n          </div>\r\n          \r\n          <div>\r\n            Contacts:\r\n            <ul>\r\n              {\r\n                Object.keys(userInfo.contacts).map((title, i) => <ContactForEditMode initialValue={initialValues.contacts} key={i} title={title} />)\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n          <button disabled={submitting || pristine}>Save changes</button>\r\n        </form>\r\n      )} />\r\n    \r\n  )\r\n}\r\n\r\nconst ContactForEditMode = ({title, initialValue}) => {\r\n  return (\r\n    <li>\r\n      {title}:\r\n      <Field \r\n        name={title} \r\n        validate = {null} \r\n        component={InputArea} \r\n        type='text'\r\n        placeholder={`specify link for your ${title}`}\r\n        defaultValue={initialValue[title]}\r\n      />\r\n\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default ProfileFormData;","import classes from './User-info.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n// import UserStatus from './UserStatus/UserStatus';\r\nimport UserStatusWithHooks from './UserStatus/UserStatusWithHooks';\r\nimport profileIcon from '../../../assets/img/profile.png'\r\nimport { useState } from 'react';\r\nimport ProfileFormData from '../ProfileFormData';\r\n\r\nconst UserInfo = ({userInfo, statusText, updateUserStatus, savePhoto, isOwner, updateProfile, errorMessage}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if(!userInfo) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainAvatarSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode(!editMode)\r\n  }\r\n\r\n  const onSaveProfileChanges = ({userId = userInfo.userId, aboutMe = null, fullName = null, lookingForAJob = false, lookingForAJobDescription = '', ...contacts}) => {\r\n    const requestData = {userId, aboutMe, fullName, lookingForAJob, lookingForAJobDescription, contacts}\r\n    updateProfile(requestData,toggleEditMode)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.userInfo}>\r\n      <div>\r\n        <img src={userInfo.photos.large || profileIcon} height=\"200px\" alt=\"avatar\" className={classes.userAvatar} />\r\n      \r\n        {editMode && <div><input type='file' onChange={onMainAvatarSelected}/></div>}\r\n        {!isOwner && !editMode && <button onClick={toggleEditMode}>Edit profile</button>}\r\n      </div>\r\n      \r\n      <div className={classes.userData}>\r\n        {editMode ? <ProfileFormData userInfo={userInfo} onSaveProfileChanges={onSaveProfileChanges} /> : <ProfileData userInfo={userInfo} />}\r\n\r\n        {errorMessage && <div className={classes.errorMsg}>Error: {errorMessage}</div>}\r\n        \r\n        <UserStatusWithHooks status={statusText} updateUserStatus={updateUserStatus}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ProfileData = ({userInfo}) => {\r\n  return (\r\n    <>\r\n      <div className={classes.userName}>{userInfo.fullName}</div>\r\n      <div className={classes.userDataItem + ' userDataItem'}>\r\n        About me:\r\n        <span>{userInfo.aboutMe}</span>\r\n      </div>\r\n      <div className={classes.userDataItem}>\r\n        Looking for a job:\r\n        <span>{userInfo.lookingForAJob ? 'Yes' : 'No'}</span>\r\n      </div>\r\n\r\n      <div className={classes.userDataItem}>\r\n        My professional skills:\r\n        <span>{userInfo.lookingForAJobDescription}</span>\r\n      </div>\r\n      \r\n      {\r\n        Object.entries(userInfo.contacts).map((item, i) => <Contact key={i} title={item[0]} value={item[1]}/>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({title, value}) => {\r\n  return (\r\n    <div className={classes.userDataItem}>\r\n      {title}:\r\n      <span>{value}</span>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default UserInfo","import MyPostsContainer from './My-posts/My-posts-container';\r\nimport classes from './Profile.module.css';\r\nimport UserInfo from './User-info/User-info';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <main className={classes.main}>\r\n      <UserInfo {...props}/>\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfile, getUserStatus, savePhotoThunkCreator, updateProfileThunkCreator, updateUserStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"../common/witRouter\";\r\nimport { withAuthRedirectHOC } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getErrorMessage, getIsAvatarLoading, getStatusText, getUserId, getUserInfo } from \"../../redux/selectors/profile-selectors\";\r\n\r\nclass ProfileContainer extends React.Component  {\r\n  refreshProfile() {\r\n    const {router, userId, getProfile, getUserStatus} = this.props;\r\n    const profileId = router.params.userId ?? userId;\r\n    getProfile(profileId);\r\n    getUserStatus(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapShot) {\r\n    if(prevProps.router.params.userId !== this.props.router.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return <Profile {...this.props} isOwner={!!this.props.router.params.userId} />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: getUserInfo(state),\r\n    statusText: getStatusText(state),\r\n    userId: getUserId(state),\r\n    isAvatarLoading: getIsAvatarLoading(state),\r\n    errorMessage: getErrorMessage(state),\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile: getProfile, getUserStatus: getUserStatus, updateUserStatus, savePhoto: savePhotoThunkCreator, updateProfile: updateProfileThunkCreator }),\r\n  withRouter, \r\n  withAuthRedirectHOC,\r\n)(ProfileContainer);"],"names":["_ref","message","likeCount","_jsxs","className","children","_jsx","src","alt","React","addNewPost","postData","classes","PostForm","onSubmit","values","post","map","p","index","Post","getUserInfo","state","profilePage","userInfo","getStatusText","statusText","getUserId","userId","getPostData","getIsAvatarLoading","isAvatarLoading","getErrorMessage","errorMessage","compose","connect","addPostActionCreator","MyPosts","status","updateUserStatus","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatusText","useEffect","toggleEditMode","onChange","e","target","value","type","autoFocus","onClick","onDoubleClick","ContactForEditMode","_ref3","title","initialValue","Field","name","validate","component","InputArea","placeholder","concat","defaultValue","onSaveProfileChanges","Form","initialValues","render","_ref2","handleSubmit","submitting","pristine","createField","composeValidators","requiredField","maxLength","Textarea","Object","keys","contacts","i","disabled","ProfileData","_Fragment","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","entries","item","Contact","_ref4","savePhoto","isOwner","updateProfile","Preloader","photos","large","profileIcon","height","files","length","ProfileFormData","_ref2$userId","_ref2$aboutMe","_ref2$fullName","_ref2$lookingForAJob","_ref2$lookingForAJobD","_objectWithoutProperties","_excluded","UserStatusWithHooks","props","UserInfo","_objectSpread","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","_router$params$userId","_this$props","this","router","getProfile","getUserStatus","profileId","params","refreshProfile","prevProps","prevState","snapShot","Profile","savePhotoThunkCreator","updateProfileThunkCreator","withRouter","withAuthRedirectHOC"],"sourceRoot":""}